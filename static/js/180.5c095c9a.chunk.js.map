{"version":3,"file":"static/js/180.5c095c9a.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Relevant Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","const courses = [\n  {\n    title: 'Parallel and Sequential Data Structures and Algorithms',\n    number: '15210',\n    link: 'https://csd.cmu.edu/course-profiles/15-210-parallel-and-sequential-data-structures-and-algorithms',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Introduction to Maching Learning',\n    number: '10315',\n    link: 'https://www.cs.cmu.edu/~10315-s20/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Introduction to Feedback Control Systems',\n    number: '16299',\n    link: 'https://www.coursicle.com/cmu/courses/ROB/16299/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Introduction to Computer Systems',\n    number: '15213',\n    link: 'https://www.cs.cmu.edu/~213/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Great Theoretical Ideas in Computer Science',\n    number: '15251',\n    link: 'https://www.anilada.com/courses/15251s17/www/policy.html',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Artificial Intelligence: Representation and Problem Solving',\n    number: '15218',\n    link: 'https://www.cs.cmu.edu/~15281-s20/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Probability Theory for Computer Scientists',\n    number: '36218',\n    link: 'https://www.coursicle.com/cmu/courses/STA/36218/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Functional Programming',\n    number: '15150',\n    link: 'https://www.cs.cmu.edu/~15150/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Matrices and Linear Transformations',\n    number: '21241',\n    link: 'https://www.math.cmu.edu/~handron/21_241/index.html',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Mathematical Foundations for Computer Science',\n    number: '15151',\n    link: 'https://csd.cmu.edu/course-profiles/15-151-Mathematical-Foundations-for-Computer-Science',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Principles of Imperative Computation',\n    number: '15122',\n    link: 'http://www.cs.cmu.edu/~15122/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Great Practical Ideas in CS',\n    number: '07131',\n    link: 'https://www.cs.cmu.edu/~07131/f21/',\n    university: 'Carnegie Mellon University',\n  },\n  {\n    title: 'Structure and Interpretation of Computer Programs',\n    number: 'CS61A',\n    link: 'https://cs61a.org/',\n    university: 'University of California, Berkeley',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'Carneige Mellon Univeristy',\n    degree: 'M.S. Computer Science',\n    link: 'https://stanford.edu',\n    year: 'Dec 2024',\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'Amazon',\n    position: 'Incoming Software Dev Engineer Intern',\n    link: 'https://www.amazon.com',\n    daterange: 'May 2023 - Aug 2023',\n    points: [\n    ],\n  },\n  {\n    company: 'Optum Technology',\n    position: 'Software Engineers Intern',\n    link: 'http://www.Optum.com',\n    daterange: 'May 2022 - Aug 2022',\n    points: [\n      'Designed, prototyped, tested, and deployed an internal Java API that streamed secure provide demographic data attestation events to a central location.',\n      'Decreased turnaround time for the verification and suppression of demographic information by 80% by migrating and streaming 100,000+ rows and 80+ columns of data from separate databases into a centralized location, and ensuring 100% of provider demographic information was attested for within a 10 day period for 1.3 million healthcare professionals.',\n      'Created a Java application and API using the Spring Boot framework in a scrum team of 4 engineers using Kadka, Jenkins, Docker, and Kubernetes for data streaming and deployment.',\n      'Presented intern project to hundreds of business leaders and engineers in a Shark Tank format at various point of its development with PowerPoint and live demos.',\n      'Technology: Java, SpringBoot, MySql, Jackson API, Apache POI, JDBC, Jenkins, Docker, Kubernetes, Kafka.',\n    ],\n  },\n];\n\nexport default positions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\n// import Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\n// import { skills, categories } from '../data/resume/skills';\nimport Pdf from '../data/resume/Resume.pdf';\n\nconst sections = [\n  'Education',\n  'Experience',\n  // 'Skills',\n  'Courses',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Steven Kam's Resume.\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n          <div className=\"App\">\n            <a href={Pdf} target=\"_blank\" rel=\"noreferrer\">\n              Click here for the resume as exportable PDF.\n            </a>\n          </div>\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      {/* <Skills skills={skills} categories={categories} /> */}\n      <Courses data={courses} />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","map","defaultProps","company","position","daterange","points","point","Experience","job","Course","last","number","title","getRows","courses","course","idx","length","Courses","university","sections","Main","description","to","sec","toLowerCase","Pdf","target","rel","degrees","positions"],"sourceRoot":""}
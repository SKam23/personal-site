{"version":3,"file":"static/js/439.1bd026b8.chunk.js","mappings":"yOA6GA,EAxGiB,WACf,IAAMA,GAAgBC,EAAAA,EAAAA,aAAW,yCAAC,WAAMC,GAAN,gGAExBC,EAAAA,EAAAA,GAASD,GAFe,+EAIvB,MAJuB,wDAAD,sDAW9B,IAEGE,GAAkBH,EAAAA,EAAAA,aAAW,yCAAC,WAAMI,GAAN,gGAE1BF,EAAAA,EAAAA,GAASE,GAFiB,+EAIzB,MAJyB,wDAAD,sDAOhC,IAEH,OACE,SAAC,IAAD,CACEC,GAAG,cACHC,KAAMP,EACNQ,OAAQJ,EACRK,QAAS,CACPC,WAAY,CACVC,MAAO,CACLC,MAAO,YAGXC,SAAU,IACVC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPC,QAAQ,EACRC,KAAM,QAERC,QAAS,CACPF,QAAQ,EACRC,KAAM,WAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,SAAU,IACVC,SAAU,MAIhBC,UAAW,CACThB,MAAO,CACLC,MAAO,SAETgB,MAAO,CACLjB,MAAO,QACPc,SAAU,IACVR,QAAQ,EACRY,QAAS,GACTC,MAAO,GAETC,WAAY,CACVd,QAAQ,GAEVe,KAAM,CACJC,WAAY,OACZhB,QAAQ,EACRiB,SAAU,CACRC,QAAS,UAEXC,QAAQ,EACRC,MAAO,EACPC,UAAU,GAEZC,OAAQ,CACNC,QAAS,CACPvB,QAAQ,EACRwB,KAAM,KAER7B,MAAO,IAETiB,QAAS,CACPjB,MAAO,IAET8B,MAAO,CACLC,KAAM,UAERC,KAAM,CACJhC,MAAO,CAAEiC,IAAK,EAAGC,IAAK,KAG1BC,cAAc,IAIrB,E,SCzED,EA5Bc,kBACZ,UAACC,EAAA,EAAD,CACEC,YAAa,iCADf,WAGE,SAAC,EAAD,KACA,gBAAKC,UAAU,UAAf,UACE,qBAASA,UAAU,OAAO5C,GAAG,QAA7B,WACE,6BACE,iBAAK4C,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAMC,GAAG,IAAT,+CAC1B,kIAMJ,4DAAkC,SAAC,KAAD,CAAMA,GAAG,SAAT,sBAAlC,6BAC2B,KACzB,SAAC,KAAD,CAAMA,GAAG,UAAT,oBAFF,KAEqC,KACnC,SAAC,KAAD,CAAMA,GAAG,YAAT,sBAHF,KAGyC,IAHzC,SAIO,SAAC,KAAD,CAAMA,GAAG,SAAT,6BAJP,KAIkD,IAJlD,OAKK,SAAC,KAAD,CAAMA,GAAG,WAAT,qBALL,iBAhBM,C","sources":["components/Particle.jsx","pages/Index.js"],"sourcesContent":["import { useCallback } from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\n\n/* eslint-disable */\nconst Particle = () => {\n  const particlesInit = useCallback(async engine => {\n    try{\n      await loadFull(engine);\n    } catch (error){\n      return null\n    }\n    // console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    // await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async container => {\n    try{\n      await loadFull(container);\n    } catch (error){\n      return null\n    }\n    // await console.log(container);\n  }, []);\n\n  return (\n    <Particles\n      id='tsparticles'\n      init={particlesInit}\n      loaded={particlesLoaded}\n      options={{\n        background: {\n          color: {\n            value: '#f4f4f4',\n          },\n        },\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: 'push',\n            },\n            onHover: {\n              enable: true,\n              mode: 'repulse',\n            },\n            resize: true,\n          },\n          modes: {\n            push: {\n              quantity: 4,\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: '#0000',\n          },\n          links: {\n            color: '#0000',\n            distance: 150,\n            enable: true,\n            opacity: 0.1,\n            width: 1,\n          },\n          collisions: {\n            enable: true,\n          },\n          move: {\n            directions: 'none',\n            enable: true,\n            outModes: {\n              default: 'bounce',\n            },\n            random: false,\n            speed: 6,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800,\n            },\n            value: 80,\n          },\n          opacity: {\n            value: 0.1,\n          },\n          shape: {\n            type: 'circle',\n          },\n          size: {\n            value: { min: 1, max: 5 },\n          },\n        },\n        detectRetina: true,\n      }}\n    />\n  );\n}\n\nexport default Particle\n\n/* eslint-enable */\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Particle from '../components/Particle';\n\nimport Main from '../layouts/Main';\n\nconst Index = () => (\n  <Main\n    description={\"Steven Kam's personal website.\"}\n  >\n    <Particle />\n    <div className=\"content\">\n      <article className=\"post\" id=\"index\">\n        <header>\n          <div className=\"title\">\n            <h2 data-testid=\"heading\"><Link to=\"/\">Welcome to my personal Website</Link></h2>\n            <p>\n              A beautiful, responsive, statically-generated,\n              react application written with modern Javascript.\n            </p>\n          </div>\n        </header>\n        <p> Please feel free to read more <Link to=\"/about\">about me</Link>,\n          or you can check out my {' '}\n          <Link to=\"/resume\">resume</Link>, {' '}\n          <Link to=\"/projects\">projects</Link>, {' '}\n          view <Link to=\"/stats\">site statistics</Link>, {' '}\n          or <Link to=\"/contact\">contact</Link> me.\n        </p>\n      </article>\n    </div>\n  </Main>\n);\n\nexport default Index;\n"],"names":["particlesInit","useCallback","engine","loadFull","particlesLoaded","container","id","init","loaded","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","Main","description","className","to"],"sourceRoot":""}